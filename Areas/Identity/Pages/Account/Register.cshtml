@page
@model RegisterModel
@{
    ViewData["Title"] = "Create Account";
}
<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet" />
<style>
    .field-validation-error {
        float: left;
    }

    .with-bullet:empty::before {
        content: none;
    }

    .with-bullet:not(:empty)::before {
        content: "• ";
        margin-right: 4px;
    }

</style>
<h1>@ViewData["Title"]</h1>

<div class="row">
    <div class="col-md-4">
    </div>
    <div class="col-md-4">
        <form id="registerForm" asp-route-returnUrl="@Model.ReturnUrl" method="post">
            <hr />

            <div asp-validation-summary="ModelOnly" class="text-danger" role="alert"></div>
            <!-- First Name -->
            <div class="mb-3">
                <div class="input-group">
                    <span class="input-group-text bg-white border-end-0">
                        <i class="bi bi-person-fill"></i>
                    </span>
                    <input asp-for="Input.FirstName" class="form-control border-start-0" placeholder="First name" />
                </div>
                <span asp-validation-for="Input.FirstName" class="text-danger"></span>
            </div>

            <!-- Last Name -->
            <div class="mb-3">
                <div class="input-group">
                    <span class="input-group-text bg-white border-end-0">
                        <i class="bi bi-person-lines-fill"></i>
                    </span>
                    <input asp-for="Input.LastName" class="form-control border-start-0" placeholder="Last name" />
                </div>
                <span asp-validation-for="Input.LastName" class="text-danger"></span>
            </div>

            <!-- Email -->
            <div class="mb-3">
                <div class="input-group">
                    <span class="input-group-text bg-white border-end-0">
                        <i class="bi bi-envelope-fill"></i>
                    </span>
                    <input asp-for="Input.Email" class="form-control border-start-0" placeholder="Email" />
                </div>
                <span asp-validation-for="Input.Email" class="text-danger"></span>
            </div>

            <!-- Password -->
            <div class="mb-3">
                <div class="input-group">
                    <span class="input-group-text bg-white border-end-0">
                        <i class="bi bi-lock-fill"></i>
                    </span>
                    <input asp-for="Input.Password" class="form-control border-start-0" type="password" placeholder="Password" />
                </div>
                <span asp-validation-for="Input.Password" class="text-danger"></span>
            </div>

            <!-- Confirm Password -->
            <div class="mb-3">
                <div class="input-group">
                    <span class="input-group-text bg-white border-end-0">
                        <i class="bi bi-lock-fill"></i>
                    </span>
                    <input asp-for="Input.ConfirmPassword" class="form-control border-start-0" type="password" placeholder="Confirm password" />
                </div>
                <span asp-validation-for="Input.ConfirmPassword" class="text-danger"></span>
            </div>

            <div id="passwordRequirements" class="mb-3">
                <ul class="list-unstyled small mb-0">
                    <li id="ruleLength" class="password-rule invalid">At least 8 characters</li>
                    <li id="ruleUpper" class="password-rule invalid">At least one uppercase letter</li>
                    <li id="ruleMatch" class="password-rule invalid">Passwords match</li>
                </ul>
            </div>

            <button id="registerSubmit" type="submit" class="w-100 btn btn-lg btn-primary fw-bold mt-1">Register</button>
        </form>


    </div>

</div>

@section Scripts {
    <script>
        (() => {
            const pwd      = document.querySelector('[name="Input.Password"]');
            const confirm  = document.querySelector('[name="Input.ConfirmPassword"]');

            const ruleLen  = document.getElementById('ruleLength');
            const ruleCaps = document.getElementById('ruleUpper');
            const ruleEq   = document.getElementById('ruleMatch');

            const setRule = (el, ok, show) => {
                el.classList.toggle('valid', show && ok);
                el.classList.toggle('invalid', show && !ok);
                if (!show) {
                    el.classList.remove('valid', 'invalid');
                }
            };

            const validate = () => {
                const v  = pwd.value || '';
                const v2 = confirm.value || '';
                const show = v.length > 0 || v2.length > 0;

                setRule(ruleLen,  v.length >= 8, show);
                setRule(ruleCaps, /[A-Z]/.test(v), show);
                setRule(ruleEq,   v !== '' && v === v2, show);
            };

            pwd.addEventListener('input', validate);
            confirm.addEventListener('input', validate);
            validate();        // run once on load
        })();
    </script>
    <partial name="_ValidationScriptsPartial" />
}

<style>
    .password-rule {
        color: #6c757d; /* default */
    }

        .password-rule::before {
            content: "✗ ";
        }

        /* Success - green with checkmark */
        .password-rule.valid {
            color: #198754;
        }

            .password-rule.valid::before {
                content: "✓ ";
            }

        /* Actively invalid - red with ✗ */
        .password-rule.invalid {
            color: #dc3545; /* Bootstrap danger red */
        }
</style>